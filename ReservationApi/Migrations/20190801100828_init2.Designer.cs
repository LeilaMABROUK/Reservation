// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservationApi.Models;

namespace ReservationApi.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190801100828_init2")]
    partial class init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReservationApi.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("NameClient")
                        .IsRequired();

                    b.Property<string>("PrenomClient")
                        .IsRequired();

                    b.Property<int>("tel");

                    b.HasKey("IdClient");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ReservationApi.Models.Club", b =>
                {
                    b.Property<int>("IdClub")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<DateTime>("Heure_Fermeture");

                    b.Property<DateTime>("Heure_Ouverture");

                    b.Property<string>("NameClub")
                        .IsRequired();

                    b.Property<int>("Tel");

                    b.HasKey("IdClub");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("ReservationApi.Models.Reservation", b =>
                {
                    b.Property<int>("IdClient");

                    b.Property<int>("IdTerrain");

                    b.Property<int>("IdReservation");

                    b.Property<int>("NbPlace_Reserve");

                    b.HasKey("IdClient", "IdTerrain");

                    b.HasAlternateKey("IdReservation");

                    b.HasIndex("IdTerrain");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("ReservationApi.Models.Terrain", b =>
                {
                    b.Property<int>("IdTerrain")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdClub");

                    b.Property<int>("Nb_place");

                    b.Property<string>("nameTerrain")
                        .IsRequired();

                    b.Property<int>("type");

                    b.HasKey("IdTerrain");

                    b.HasIndex("IdClub");

                    b.ToTable("Terrains");
                });

            modelBuilder.Entity("ReservationApi.Models.Reservation", b =>
                {
                    b.HasOne("ReservationApi.Models.Client", "client")
                        .WithMany("Reservations")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ReservationApi.Models.Terrain", "terrain")
                        .WithMany("Reservations")
                        .HasForeignKey("IdTerrain")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ReservationApi.Models.Terrain", b =>
                {
                    b.HasOne("ReservationApi.Models.Club", "club")
                        .WithMany("Terrains")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
